AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 25
    Tracing: Active
    Runtime: nodejs16.x
    MemorySize: 128
    Environment:
      Variables:
        QUEUE_URL: !Ref MySqsQueue
        MONGO_URL: !Ref MongoUrl

Parameters:
  MongoUrl:
    Type: String

Resources:
  # Define the SQS queue
  MySqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "lambda-test"

  # Define the consumer Lambda function
  QueueConsumerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: sqsQueueMail.handler
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySqsQueue.Arn
            BatchSize: 10
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - src/sqsQueueMail.ts

    # Define the cron Lambda function
  CronMain:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: cronMain.handler
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt MySqsQueue.QueueName
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            # Schedule: cron(5 6 ? * MON-FRI *)
            Schedule: cron(0/10 * ? * MON-FRI *)
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020"
        EntryPoints: 
        - src/cronMain.ts
        External: 
          - 'aws-sdk'

  CronScheduleMails:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: cronScheduleMails.handler
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt MySqsQueue.QueueName
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            # Schedule: cron(5 8-21 ? * MON-FRI *)
            Schedule: cron(0/10 * ? * MON-FRI *)
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020"
        EntryPoints: 
        - src/cronScheduleMails.ts
        External: 
          - 'aws-sdk'          

Outputs:
  QueueConsumerFunction:
    Description: QueueConsumerFunction function name
    Value: !Ref QueueConsumerFunction
  
  SQSqueueName:
    Description: SNS queue name
    Value: !GetAtt MySqsQueue.QueueName

  SQSqueueARN:
    Description: SQS queue ARN
    Value: !GetAtt MySqsQueue.Arn

  SQSqueueURL:
    Description: SQS queue URL
    Value: !Ref MySqsQueue

  MongoUrl:
    Description: MongoDB URL
    Value: !Ref MongoUrl
